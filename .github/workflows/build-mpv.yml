name: Build mpv for macOS ARM

on:
  push:
    branches:
      - main  # 你可以根据需要更改分支名称
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: macos-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up environment
      run: |
        brew update
        brew install meson ninja pkg-config nasm
        brew install --build-from-source ffmpeg libass

        # 安装 libplacebo 依赖
        brew install vulkan-headers
        brew install shaderc

        # 安装 CMake
        brew install cmake

        # 安装 Python 和创建虚拟环境
        brew install python@3.13
        python3 -m venv venv
        source venv/bin/activate

        # 在虚拟环境中安装 glad
        pip install glad

        # 验证 glad 是否安装成功
        python3 -c "import glad; print(glad.__version__)"

        # 克隆并编译 libplacebo
        git clone https://code.videolan.org/videolan/libplacebo.git
        cd libplacebo

        # 初始化子模块
        git submodule update --init

        # 设置安装路径为工作目录下的 local 目录
        export PREFIX="$GITHUB_WORKSPACE/local"
        mkdir -p "$PREFIX"

        meson setup build --prefix="$PREFIX"
        meson compile -C build
        meson install -C build
        cd ..

        # 验证 libplacebo.pc 文件是否存在
        if [ -f "$PREFIX/lib/pkgconfig/libplacebo.pc" ]; then
          echo "libplacebo.pc found!"
        else
          echo "libplacebo.pc not found!"
          exit 1
        fi

        # 设置 PKG_CONFIG_PATH 和 LD_LIBRARY_PATH
        echo "PKG_CONFIG_PATH=$PREFIX/lib/pkgconfig" >> $GITHUB_ENV
        echo "LD_LIBRARY_PATH=$PREFIX/lib" >> $GITHUB_ENV

    - name: Clone mpv repository
      run: |
        git clone https://github.com/mpv-player/mpv.git
        # 将 cross-arm.txt 复制到 mpv 目录
        cp cross-arm.txt mpv/

    - name: Configure and build mpv
      run: |
        cd mpv
        export PKG_CONFIG_PATH="$GITHUB_WORKSPACE/local/lib/pkgconfig"
        export LD_LIBRARY_PATH="$GITHUB_WORKSPACE/local/lib"

        # 设置 PYTHONPATH
        export PYTHONPATH=$(python3 -c "import site; print(site.getsitepackages()[0])")

        # 验证 glad 是否在 PYTHONPATH 中
        python3 -c "import glad; print(glad.__version__)"

        meson setup build --prefix="$GITHUB_WORKSPACE/local" --default-library=static --cross-file=cross-arm.txt
        meson compile -C build

    - name: Package the binary
      run: |
        mkdir -p mpv-dist
        cp mpv/build/mpv mpv-dist/
        tar -czvf mpv-macos-arm64.tar.gz -C mpv-dist .

    - name: Upload to Release
      uses: softprops/action-gh-release@v1
      with:
        files: mpv-macos-arm64.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
